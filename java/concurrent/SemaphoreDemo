package concurrent;

import java.util.concurrent.Semaphore;
import java.util.concurrent.TimeUnit;

/**
 * 
 * @author qqa
 * @version 1.0 2019年7月3日 下午9:02:48
 *
 */
public class SemaphoreDemo {

	public static void main(String[] args) {
		
		Semaphore semaphore = new Semaphore(3);		//模拟三个停车位
		
		for(int i = 1; i <= 6; i++){
			new Thread(() -> {
				try {
					semaphore.acquire();
					System.out.println(Thread.currentThread().getName()+" 抢到车位...");
					try {
						TimeUnit.SECONDS.sleep(3);				//模拟停车3秒
					} catch (Exception e) {
						e.printStackTrace();
					}
					System.out.println(Thread.currentThread().getName()+" 停车3秒后离开..");
				} catch (Exception e) {
					e.printStackTrace();
				}finally{
					semaphore.release();
				}
				
			},String.valueOf(i)).start();
		}
	}

}


/* 运行结果

1 抢到车位...
3 抢到车位...
6 抢到车位...
3 停车3秒后离开..
1 停车3秒后离开..
6 停车3秒后离开..
4 抢到车位...
5 抢到车位...
2 抢到车位...
5 停车3秒后离开..
2 停车3秒后离开..
4 停车3秒后离开..

*/
